/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-amber-50: oklch(98.7% 0.022 95.277);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --spacing: 0.25rem;
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-primary-500: #bf00ff;
    --color-secondary-500: #00ffbf;
    --color-secondary-700: #00ad82;
    --color-accent-500: #c5417b;
    --color-tinted-neutral-50: #f5f4f6;
    --color-tinted-neutral-100: #e3e2e5;
    --color-tinted-neutral-200: #cac9cd;
    --color-tinted-neutral-500: #7f7c85;
    --color-tinted-neutral-600: #65626b;
    --color-tinted-neutral-700: #4b4851;
    --color-tinted-neutral-800: #312e37;
    --color-tinted-neutral-900: #0a040c;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-none {
    pointer-events: none;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .-top-20 {
    top: calc(var(--spacing) * -20);
  }
  .-z-30 {
    z-index: calc(30 * -1);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .m-60 {
    margin: calc(var(--spacing) * 60);
  }
  .mr-60 {
    margin-right: calc(var(--spacing) * 60);
  }
  .mr-80 {
    margin-right: calc(var(--spacing) * 80);
  }
  .ml-60 {
    margin-left: calc(var(--spacing) * 60);
  }
  .ml-80 {
    margin-left: calc(var(--spacing) * 80);
  }
  .ml-100 {
    margin-left: calc(var(--spacing) * 100);
  }
  .flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .size-auto {
    width: auto;
    height: auto;
  }
  .size-full {
    width: 100%;
    height: 100%;
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-\[40px\] {
    height: 40px;
  }
  .h-\[260px\] {
    height: 260px;
  }
  .h-\[316px\] {
    height: 316px;
  }
  .h-\[680px\] {
    height: 680px;
  }
  .h-\[720px\] {
    height: 720px;
  }
  .h-\[calc\(\)\] {
    height: calc();
  }
  .h-\[calc\(100vh-\)\] {
    height: calc(100vh - );
  }
  .h-\[calc\(100vh-80px\)\] {
    height: calc(100vh - 80px);
  }
  .h-\[calc\(100vh-160px\)\] {
    height: calc(100vh - 160px);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[260px\] {
    max-height: 260px;
  }
  .max-h-\[680px\] {
    max-height: 680px;
  }
  .max-h-\[720px\] {
    max-height: 720px;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-\[440px\] {
    width: 440px;
  }
  .w-\[480px\] {
    width: 480px;
  }
  .w-\[500px\] {
    width: 500px;
  }
  .w-\[540px\] {
    width: 540px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-\[440px\] {
    max-width: 440px;
  }
  .max-w-\[500px\] {
    max-width: 500px;
  }
  .max-w-\[670px\] {
    max-width: 670px;
  }
  .max-w-\[720px\] {
    max-width: 720px;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .translate-x-10 {
    --tw-translate-x: calc(var(--spacing) * 10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-14 {
    --tw-translate-y: calc(var(--spacing) * 14);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-125 {
    --tw-scale-x: 125%;
    --tw-scale-y: 125%;
    --tw-scale-z: 125%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-20 {
    gap: calc(var(--spacing) * 20);
  }
  .gap-40 {
    gap: calc(var(--spacing) * 40);
  }
  .gap-56 {
    gap: calc(var(--spacing) * 56);
  }
  .gap-60 {
    gap: calc(var(--spacing) * 60);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-8 {
    border-style: var(--tw-border-style);
    border-width: 8px;
  }
  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }
  .border-solid {
    --tw-border-style: solid;
    border-style: solid;
  }
  .border-tinted-neutral-50 {
    border-color: var(--color-tinted-neutral-50);
  }
  .bg-\[url\] {
    background-color: url;
  }
  .bg-accent-500 {
    background-color: var(--color-accent-500);
  }
  .bg-amber-400 {
    background-color: var(--color-amber-400);
  }
  .bg-tinted-neutral-50 {
    background-color: var(--color-tinted-neutral-50);
  }
  .bg-tinted-neutral-200 {
    background-color: var(--color-tinted-neutral-200);
  }
  .bg-tinted-neutral-500 {
    background-color: var(--color-tinted-neutral-500);
  }
  .bg-tinted-neutral-700 {
    background-color: var(--color-tinted-neutral-700);
  }
  .bg-tinted-neutral-800 {
    background-color: var(--color-tinted-neutral-800);
  }
  .bg-tinted-neutral-900 {
    background-color: var(--color-tinted-neutral-900);
  }
  .bg-\[url\(\"\$\{content\[project\]\.img\}\"\)\] {
    background-image: url("${content[project].img}");
  }
  .bg-\[url\(\'\'\)\] {
    background-image: url('');
  }
  .bg-\[url\(\'\.\.\'\)\] {
    background-image: url('..');
  }
  .bg-\[url\(\'\.\.\/public\/\'\)\] {
    background-image: url('../public/');
  }
  .bg-\[url\(\'\.\.\/public\/connectify5\.png\'\)\] {
    background-image: url('../public/connectify5.png');
  }
  .bg-\[url\(\'\.\.\/public\/connectify10\.png\'\)\] {
    background-image: url('../public/connectify10.png');
  }
  .bg-\[url\(\'\.\.public\/connectify\'\)\] {
    background-image: url('..public/connectify');
  }
  .bg-\[url\(\'\.\.public\/connectify5\'\)\] {
    background-image: url('..public/connectify5');
  }
  .bg-\[url\(\'\.\.public\/connectify5\.png\'\)\] {
    background-image: url('..public/connectify5.png');
  }
  .bg-\[url\(\'content\[project\]\'\)\] {
    background-image: url('content[project]');
  }
  .bg-\[url\(\'content\[project\]\.img\'\)\] {
    background-image: url('content[project].img');
  }
  .bg-\[url\(\)\] {
    background-image: url();
  }
  .bg-\[url\(\`content\[project\]\.img\`\)\] {
    background-image: url(`content[project].img`);
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-top {
    background-position: top;
  }
  .object-cover {
    object-fit: cover;
  }
  .object-top {
    object-position: top;
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-24 {
    padding-inline: calc(var(--spacing) * 24);
  }
  .px-40 {
    padding-inline: calc(var(--spacing) * 40);
  }
  .pt-10 {
    padding-top: calc(var(--spacing) * 10);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pt-24 {
    padding-top: calc(var(--spacing) * 24);
  }
  .pt-30 {
    padding-top: calc(var(--spacing) * 30);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pb-30 {
    padding-bottom: calc(var(--spacing) * 30);
  }
  .text-justify {
    text-align: justify;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-\[1\.25rem\] {
    font-size: 1.25rem;
  }
  .text-\[1rem\] {
    font-size: 1rem;
  }
  .text-\[4rem\] {
    font-size: 4rem;
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-secondary-500 {
    color: var(--color-secondary-500);
  }
  .text-secondary-700 {
    color: var(--color-secondary-700);
  }
  .text-tinted-neutral-50 {
    color: var(--color-tinted-neutral-50);
  }
  .text-tinted-neutral-600 {
    color: var(--color-tinted-neutral-600);
  }
  .text-tinted-neutral-900 {
    color: var(--color-tinted-neutral-900);
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-5 {
    opacity: 5%;
  }
  .opacity-10 {
    opacity: 10%;
  }
  .opacity-30 {
    opacity: 30%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 100ms;
    transition-duration: 100ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:block {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: block;
      }
    }
  }
  .group-hover\:-translate-10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * -10);
        --tw-translate-y: calc(var(--spacing) * -10);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:bg-\[\.\.\/\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: ../;
      }
    }
  }
  .group-hover\:bg-amber-50 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-amber-50);
      }
    }
  }
  .group-hover\:bg-\[url\(\'\'\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url('');
      }
    }
  }
  .group-hover\:bg-\[url\(\'\.\.\/public\'\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url('../public');
      }
    }
  }
  .group-hover\:bg-\[url\(\'\.\.\/public\/\'\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url('../public/');
      }
    }
  }
  .group-hover\:bg-\[url\(\'\.\.\/public\/connectify\'\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url('../public/connectify');
      }
    }
  }
  .group-hover\:bg-\[url\(\'\.\.\/public\/connectify5\.png\'\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url('../public/connectify5.png');
      }
    }
  }
  .group-hover\:bg-\[url\(\)\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-image: url();
      }
    }
  }
  .group-hover\:text-secondary-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-secondary-500);
      }
    }
  }
  .group-hover\:opacity-10 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 10%;
      }
    }
  }
  .hover\:text-4xl {
    &:hover {
      @media (hover: hover) {
        font-size: var(--text-4xl);
        line-height: var(--tw-leading, var(--text-4xl--line-height));
      }
    }
  }
  .hover\:text-secondary-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-secondary-500);
      }
    }
  }
}
body {
  background-color: var(--color-tinted-neutral-900);
  font-family: "Inter";
}
@layer components {
  .header-default {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 80px;
    width: 100%;
    gap: 140px;
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-primary-500);
  }
  .header-back {
    display: flex;
    height: 80px;
    width: 100%;
    align-items: center;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 1);
    padding-left: calc(var(--spacing) * 10);
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    color: var(--color-tinted-neutral-50);
  }
  .header-item {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .gradient-divider-top {
    top: 800px;
    height: 72px;
    width: 100%;
    --tw-gradient-position: to bottom;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to bottom in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-tinted-neutral-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-from-position: 0%;
    --tw-gradient-to: var(--color-tinted-neutral-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to-position: 100%;
  }
  .gradient-divider-bottom {
    top: 800px;
    height: 72px;
    width: 100%;
    --tw-gradient-position: to top;
    @supports (background-image: linear-gradient(in lab, red, red)) {
      --tw-gradient-position: to top in oklab;
    }
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: var(--color-tinted-neutral-900);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-from-position: 0%;
    --tw-gradient-to: var(--color-tinted-neutral-800);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-to-position: 100%;
  }
  .card-work-container {
    display: flex;
    align-items: center;
    justify-content: center;
    height: auto;
    width: 100%;
    background-color: var(--color-tinted-neutral-900);
    padding-top: calc(var(--spacing) * 5);
    padding-bottom: calc(var(--spacing) * 5);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-primary-500);
      }
    }
  }
  .card-work-container-flex-left {
    display: flex;
    width: auto;
    height: auto;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 100ms;
    transition-duration: 100ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * -120);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-skew-x: skewX(calc(20deg * -1));
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .card-work-container-flex-right {
    display: flex;
    width: auto;
    height: auto;
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 100ms;
    transition-duration: 100ms;
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 120);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-skew-x: skewX(calc(20deg * -1));
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .card-work-container-size {
    height: 480px;
    max-height: 480px;
    width: 755px;
    max-width: 755px;
  }
  .card-work-design-top {
    position: absolute;
    z-index: 10;
    display: none;
    height: 400px;
    max-height: 400px;
    width: 675px;
    max-width: 675px;
    background-color: var(--color-tinted-neutral-50);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: block;
      }
    }
  }
  .card-work-main {
    position: absolute;
    z-index: 30;
    --tw-translate-x: calc(var(--spacing) * 10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: 40px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    flex-direction: column;
    gap: calc(var(--spacing) * 16);
    border-style: var(--tw-border-style);
    border-width: 1px;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        padding-right: calc(var(--spacing) * 16);
      }
    }
  }
  .card-work-text-hover {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-skew-x: skewX(20deg);
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
  }
  .card-work-text-desc {
    display: none;
    max-width: 400px;
    text-align: justify;
    color: var(--color-tinted-neutral-900);
    opacity: 0%;
    transition-behavior: allow-discrete;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: block;
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-skew-x: skewX(20deg);
        transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
      }
    }
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .card-work-design-bottom {
    position: absolute;
    z-index: 10;
    display: none;
    height: 400px;
    max-height: 400px;
    width: 675px;
    max-width: 675px;
    --tw-translate-x: calc(var(--spacing) * 20);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-translate-y: calc(var(--spacing) * 20);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    background-color: var(--color-tinted-neutral-900);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        display: block;
      }
    }
  }
  .card-work-left {
    display: flex;
    height: 400px;
    max-height: 400px;
    width: 675px;
    max-width: 675px;
    align-items: flex-start;
    justify-content: flex-end;
    background-color: var(--color-tinted-neutral-100);
    padding-bottom: calc(var(--spacing) * 10);
    padding-left: calc(var(--spacing) * 10);
  }
  .card-work-right {
    display: flex;
    height: 400px;
    max-height: 400px;
    width: 675px;
    max-width: 675px;
    align-items: flex-end;
    justify-content: flex-end;
    background-color: var(--color-tinted-neutral-100);
    padding-right: calc(var(--spacing) * 10);
    padding-bottom: calc(var(--spacing) * 10);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        padding-right: calc(var(--spacing) * 0);
      }
    }
  }
  .card-work-text-left {
    display: flex;
    height: auto;
    width: auto;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 2.5);
  }
  .card-work-text-right {
    display: flex;
    height: auto;
    width: auto;
    flex-direction: column;
    align-items: flex-end;
    justify-content: flex-end;
    gap: calc(var(--spacing) * 2.5);
  }
  .card-research {
    display: flex;
    height: 680px;
    max-height: 680px;
    width: 500px;
    max-width: 500px;
    align-items: flex-start;
    justify-content: flex-start;
    background-color: var(--color-tinted-neutral-200);
    padding: calc(var(--spacing) * 10);
  }
  .card-research-text {
    display: flex;
    height: auto;
    width: auto;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    gap: calc(var(--spacing) * 10);
  }
  .footer {
    margin-top: calc(var(--spacing) * 40);
    margin-bottom: calc(var(--spacing) * 0);
    display: flex;
    align-items: center;
    justify-content: center;
    height: 124px;
    width: 100%;
    flex-direction: column;
    gap: calc(var(--spacing) * 5);
    padding-top: calc(var(--spacing) * 4);
    padding-bottom: calc(var(--spacing) * 4);
  }
  .footer-icon {
    cursor: pointer;
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
    color: var(--color-primary-500);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
    &:hover {
      @media (hover: hover) {
        font-size: var(--text-5xl);
        line-height: var(--tw-leading, var(--text-5xl--line-height));
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-tinted-neutral-50);
      }
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
    }
  }
}
